{"version":3,"sources":["config.js","Data.js","Context.js","components/CourseDetail.js","components/Courses.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/CourseDelete.js","components/UserSignIn.js","components/UserSignUp.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","index.js"],"names":["Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","emailAddress","password","fetch","this","api","response","status","json","then","data","Error","user","errors","window","location","replace","id","courseEdits","courseInfo","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","coursesArray","courseDetail","authPassword","signIn","a","getUser","userPassword","setState","set","expires","signOut","remove","courseList","getCourses","courses","getCourse","course","Object","keys","length","userId","title","description","estimatedTime","materialsNeeded","firstName","lastName","courseDelete","deleteCourse","deletion","value","actions","props","children","Component","Consumer","withContext","context","CourseDetail","author","loadCourse","match","params","catch","error","console","log","courseSettings","authUser","className","to","pathname","type","onSubmit","history","push","source","Courses","results","loadCourses","map","key","createCourse","version","xmlns","x","y","viewBox","points","cancel","submit","submitButtonText","elements","ErrorsDisplay","event","preventDefault","onClick","errorsDisplay","i","UserSignUp","change","name","target","courseBody","err","Form","placeholder","onChange","courseId","updateCourse","UserSignIn","from","Fragment","createUser","component","rest","render","HeaderWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","useEffect","CoursesWithContext","CourseDetailWithContext","UpdateCourseWithContext","UpdateCourse","CreateCourseWithContext","CreateCourse","exact","PrivateRoute","CourseDelete","NotFound","Forbidden","UnhandledError","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.23e09045.chunk.js","sourcesContent":["// Makes requests to REST API\r\nexport default {\r\n    apiBaseUrl: 'https://jmd-school-rest-api.herokuapp.com/api',\r\n  };\r\n  ","import config from './config';\r\n\r\nexport default class Data {\r\n  // Used to make the requests to the REST API.\r\n  api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\r\n      const url = config.apiBaseUrl + path;\r\n\r\n      // Configuration object that lets you control a number of different settings.\r\n      // Sends a request with the HTTP method along with request headers and a stringified body.\r\n      const options = {\r\n          method,\r\n          headers: {\r\n              'Content-Type': 'application/json; charset=utf-8',\r\n          },\r\n      };\r\n\r\n      if(body !== null) {\r\n          options.body = JSON.stringify(body);\r\n      }\r\n\r\n      // Check if auth is required.\r\n      if(requiresAuth) {\r\n        const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\r\n\r\n        options.headers['Authorization'] = `Basic ${encodedCredentials}`;\r\n      }\r\n\r\n      return fetch(url, options);\r\n  }\r\n\r\n  // Makes a GET request to the /users endpoint, and returns a JSON object.\r\n  async getUser(emailAddress, password) {\r\n    const response = await this.api(`/users`, 'GET', null, true, { emailAddress, password });\r\n    if (response.status === 200) {\r\n      return response.json().then(data => data);\r\n    }\r\n    else if (response.status === 401) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  \r\n  // Makes a POST request, sending the new user data to the /users endpoint.\r\n  async createUser(user) {\r\n    const response = await this.api('/users', 'POST', user);\r\n    if (response.status === 201) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  // Makes a GET request to courses.\r\n  async getCourses() {\r\n    const response = await this.api('/courses', 'GET')\r\n    if(response.status === 200) {\r\n      return response.json().then(data => data)\r\n    } else {\r\n      window.location.replace('/error')\r\n    }\r\n  }\r\n\r\n  // Makes a GET request to course information.\r\n  async getCourse(id) {\r\n    const response = await this.api('/courses/' + id, 'GET')\r\n    if(response.status === 200) {\r\n      return response.json().then(data => data)\r\n    } else {\r\n      window.location.replace('/error')\r\n    }\r\n  }\r\n\r\n  // Makes a DELETE request to delete a course.\r\n  async deleteCourse(id, emailAddress, password) {\r\n    const response = await this.api('/courses/' + id, 'DELETE', null, true, { emailAddress, password })\r\n    if(response.status !== 204) {\r\n      window.location.replace('/error')\r\n    }\r\n  }\r\n\r\n  // Makes an PUT request to update a course. \r\n  async updateCourse(id, courseEdits, emailAddress, password) {\r\n    const response = await this.api('/courses/' + id, 'PUT', courseEdits, true, { emailAddress, password })\r\n    if (response.status === 204) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      window.location.replace('/error')\r\n    }\r\n  }\r\n\r\n  // Makes a POST request to create a course. \r\n  async createCourse(courseInfo, emailAddress, password) {\r\n    const response = await this.api('/courses', 'POST', courseInfo, true, { emailAddress, password })\r\n    if (response.status === 201) {\r\n      return [];\r\n    }\r\n    else if (response.status === 400) {\r\n      return response.json().then(data => {\r\n        return data.errors;\r\n      });\r\n    }\r\n    else {\r\n      window.location.replace('/error')\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Data from './Data';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Context lets you pass data through the component tree without having to pass props down manually at every level.\r\nconst Context = React.createContext(); \r\n\r\n// The provider is what provides the data that needs to be consumed by other components of the application.\r\n// This class is a high-order component that returns a provider component which provides state. \r\nexport class Provider extends Component {\r\n\r\n  state = {\r\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null,\r\n    coursesArray: [],\r\n    courseDetail: [],\r\n    authPassword: Cookies.getJSON('authPassword')\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = new Data(); // Initialize a new instance of the Data class.\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { \r\n      authenticatedUser,      \r\n      coursesArray,\r\n      courseDetail,\r\n      authPassword\r\n     } = this.state;\r\n\r\n    // Value represents an object containing the context to be shared throughout the component tree.\r\n    const value = {\r\n      authenticatedUser,\r\n      coursesArray,\r\n      courseDetail,\r\n      authPassword,\r\n      data: this.data,\r\n      actions: { // Stores functions for access later on.\r\n        signIn: this.signIn,\r\n        signOut: this.signOut,\r\n        courseList: this.courseList,\r\n        courseInfo: this.courseInfo,\r\n        courseDelete: this.courseDelete,\r\n      }\r\n    };\r\n\r\n    \r\n    // The Provider is what provides the data that needs to be consumed by other components.\r\n    // Provides the application state via a required 'value' prop.\r\n    // Value represents an object containing the context to be shared throughout the component tree.\r\n    return (\r\n      <Context.Provider value={value}>\r\n        {this.props.children}\r\n      </Context.Provider>  \r\n    );\r\n  }\r\n\r\n  // Sets the state for authenticatedUser.\r\n  signIn = async (emailAddress, password) => {\r\n    // Returned promise value will look like {emailAddress: \"emailAddress\", password: \"password\"}.\r\n    const user = await this.data.getUser(emailAddress, password);\r\n    const userPassword = password;\r\n    if(user !== null) {\r\n      this.setState(() => {\r\n        return {\r\n          authenticatedUser: user,\r\n          authPassword: userPassword \r\n        };\r\n      });\r\n\r\n      // Set a cookie.\r\n      Cookies.set('authenticatedUser', JSON.stringify(user), {expires: 1});\r\n      Cookies.set('authPassword', userPassword, {expires: 1});\r\n    }\r\n    return user;\r\n  }\r\n\r\n  // Removes the user from the authenticatedUser state.\r\n  signOut = () => {\r\n    this.setState(() => {\r\n      return {\r\n        authenticatedUser: null,\r\n      };\r\n    });\r\n    Cookies.remove('authenticatedUser');\r\n    Cookies.remove('authPassword');\r\n  }\r\n\r\n  // Collects an array of courses.\r\n  courseList = async () => {\r\n    const courses = await this.data.getCourses();\r\n    this.setState(() => {\r\n      return {\r\n        coursesArray: courses,\r\n      };\r\n    });\r\n    return courses;\r\n  }\r\n  \r\n  // Collects specific course information.\r\n  courseInfo = async (id) => {\r\n    const course = await this.data.getCourse(id);\r\n    this.setState(() => {\r\n      if(Object.keys(course).length === 0) {\r\n        window.location.replace('/not-found')\r\n      } else {\r\n        return {\r\n          courseDetail: {\r\n            userId: course.course.userId,\r\n            id: course.course.id,\r\n            title: course.course.title,\r\n            description: course.course.description,\r\n            estimatedTime: course.course.estimatedTime,\r\n            materialsNeeded: course.course.materialsNeeded,\r\n            firstName: course.course.user.firstName,\r\n            lastName: course.course.user.lastName,\r\n            emailAddress: course.course.user.emailAddress\r\n          }\r\n        };\r\n      }\r\n    });\r\n    return course;    \r\n  }\r\n\r\n  // Deletes a targetted course.\r\n  courseDelete = async (id, emailAddress, password) => {\r\n    const deletion = await this.data.deleteCourse(id, emailAddress, password);\r\n    return deletion;\r\n  }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n/**\r\n * A higher-order component that wraps the provided component in a Context Consumer component.\r\n * @param {class} Component - A React component.\r\n * @returns {function} A higher-order component.\r\n */\r\n\r\n// withContext automatically connects the component passed to it to all actions and context changes\r\nexport default function withContext(Component) {\r\n  return function ContextComponent(props) {\r\n    return (\r\n      <Context.Consumer>\r\n        {context => <Component {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\n\r\nexport default class CourseDetail extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    estimatedTime: '',\r\n    materialsNeeded: '',\r\n    userId: '',\r\n    author: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadCourse();\r\n  }\r\n\r\n  // Collect targetted course information.\r\n  loadCourse = () => {\r\n    this.props.context.actions.courseInfo(this.props.match.params.id)\r\n    .then(response => {\r\n      this.setState({\r\n        title: response.course.title,\r\n        description: response.course.description,\r\n        estimatedTime: response.course.estimatedTime,\r\n        materialsNeeded: response.course.materialsNeeded,\r\n        userId: response.course.userId,\r\n        author: response.course.user\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log('Error fetching and parsing data', error)\r\n    })\r\n  };\r\n  \r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId,\r\n      author\r\n    } = this.state;\r\n\r\n    let courseSettings;\r\n    let authUser = {  \r\n      id: []\r\n    };\r\n\r\n    \r\n    if(this.props.context.authenticatedUser !== null) {\r\n      authUser = this.props.context.authenticatedUser.authUser\r\n    }\r\n\r\n    // Deletes targetted course when submitted\r\n    const submit = () => {\r\n      this.props.context.actions.courseDelete(this.props.match.params.id, authUser.emailAddress, this.props.context.authPassword)\r\n      this.props.history.push('/course/delete')\r\n    }\r\n\r\n    // Checks if the course's user matches the user currently authenticated.\r\n      if(authUser.id === userId) {\r\n        courseSettings = (\r\n          <>\r\n            <Link className=\"button\" to={{pathname: `/courses/${this.props.match.params.id}/update`}}>Update Course</Link>\r\n            <button className=\"button\" type='submit'>\r\n              Delete Course\r\n            </button>\r\n          </>\r\n        );\r\n      } \r\n\r\n    return (\r\n      <div>\r\n          <div id=\"root\">\r\n            <div>\r\n              </div>\r\n              <div>\r\n                <div className=\"actions--bar\">\r\n                  <div className=\"bounds\">\r\n                    <div className=\"grid-100\">\r\n                    <form onSubmit={submit}>\r\n                        <span>\r\n                          {courseSettings}\r\n                        </span>\r\n                        <Link className=\"button button-secondary\" to=\"/Full-Stack-App-with-React-and-a-REST-API\">Return to List</Link>\r\n                    </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bounds course--detail\">\r\n                  <div className=\"grid-66\">\r\n                    <div className=\"course--header\">\r\n                      <h4 className=\"course--label\">Course</h4>\r\n                      <h3 className=\"course--title\">{title}</h3>\r\n                      <p>By {author.firstName} {author.lastName}</p>\r\n                    </div>\r\n                    <div className=\"course--description\">\r\n                      <ReactMarkdown source={description} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grid-25 grid-right\">\r\n                    <div className=\"course--stats\">\r\n                      <ul className=\"course--stats--list\">\r\n                        <li className=\"course--stats--list--item\">\r\n                          <h4 >Estimated Time</h4>\r\n                          <h3 className=\"white-text\">{estimatedTime}</h3>\r\n                        </li>\r\n                        <li className=\"course--stats--list--item\">\r\n                          <h4>Materials Needed</h4>\r\n                          <div>\r\n                            <ReactMarkdown className=\"white-text\" source={materialsNeeded} />\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n  }    \r\n}\r\n\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Courses extends Component {\r\n  state = {\r\n    results: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCourses();\r\n  }\r\n\r\n  // Collect targetted course information.\r\n  loadCourses = () => {\r\n    this.props.context.actions.courseList()\r\n    .then(response => {\r\n      this.setState({\r\n        results: response\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log('Error fetching and parsing data', error)\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { results } = this.state;\r\n    console.log(this.props)\r\n    // Scans through array and displays each course.\r\n    let courses = results.map(course => \r\n      <div className=\"grid-33\" key={course.id}>\r\n        <Link className=\"course--module course--link\" to={{pathname: `/courses/${course.id}`}}>\r\n          <h4 className=\"course--label\">Course</h4>\r\n          <h3 className=\"course--title\">{course.title}</h3>\r\n        </Link>\r\n      </div>\r\n    );\r\n    \r\n    // Displays a button to redirect to /courses/create.\r\n    let createCourse = (\r\n      <Link className=\"course--module course--add--module\" to=\"/courses/create\">\r\n        <h3 className=\"course--add--title\">\r\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\r\n            <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \" />\r\n          </svg>\r\n          New Course\r\n        </h3>\r\n      </Link>\r\n    );\r\n  \r\n  \r\n    return (\r\n      <div id=\"root\">\r\n        <div>\r\n          <hr />\r\n          <div className=\"bounds\">\r\n            {courses}\r\n            <div className=\"grid-33\">\r\n              {createCourse}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  \r\n \r\n    \r\n\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n  const {\r\n    cancel,\r\n    errors,\r\n    submit,\r\n    submitButtonText,\r\n    elements,\r\n  } = props;\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    submit();\r\n  }\r\n\r\n  function handleCancel(event) {\r\n    event.preventDefault();\r\n    cancel();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ErrorsDisplay errors={errors} />\r\n      <form onSubmit={handleSubmit}>\r\n        {elements()}\r\n        <div className=\"pad-bottom\">\r\n          <button className=\"button\" type=\"submit\">{submitButtonText}</button>\r\n          <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ErrorsDisplay({ errors }) {\r\n  let errorsDisplay = null;\r\n\r\n  if (errors.length) {\r\n    errorsDisplay = (\r\n      <div>\r\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n        <div className=\"validation-errors\">\r\n          <ul>\r\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return errorsDisplay;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignUp extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    estimatedTime: '',\r\n    materialsNeeded: '',\r\n    userId: this.props.context.authenticatedUser.authUser.id,\r\n    errors: [],\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n        <div className=\"bounds course--detail\">\r\n            <h1 className=\"white-text\">Create Course</h1>\r\n            <Form \r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Create Course\"\r\n            elements={() => (\r\n            <div>\r\n            \r\n                <div className=\"grid-66\">\r\n                <div className=\"course--header\">\r\n                    <h4 className=\"course--label\">Course</h4>\r\n                    <div>\r\n                    <input\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        className=\"input-title course--title--input\"\r\n                        placeholder=\"Course title...\"\r\n                        onChange={this.change}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"course--description\">\r\n                    <div>\r\n                    <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        className=\"\"\r\n                        placeholder=\"Course description...\"\r\n                        onChange={this.change}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"grid-25 grid-right\">\r\n                <div className=\"course--stats\">\r\n                    <ul className=\"course--stats--list\">\r\n                    <li className=\"course--stats--list--item\">\r\n                        <h4>Estimated Time</h4>\r\n                        <div>\r\n                        <input\r\n                            id=\"estimatedTime\"\r\n                            name=\"estimatedTime\"\r\n                            type=\"text\"\r\n                            className=\"course--time--input\"\r\n                            placeholder=\"Hours\"\r\n                            onChange={this.change}\r\n                        />\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"course--stats--list--item\">\r\n                        <h4>Materials Needed</h4>\r\n                        <div>\r\n                        <textarea\r\n                            id=\"materialsNeeded\"\r\n                            name=\"materialsNeeded\"\r\n                            className=\"\"\r\n                            placeholder=\"List materials...\"\r\n                            onChange={this.change}\r\n                        />\r\n                        </div>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )} />\r\n        </div> \r\n    );\r\n  }\r\n\r\n  // Allows change in the input values.\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    \r\n    this.setState(() => {\r\n      return {\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  // On submit create a course.\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const authUser = context.authenticatedUser.authUser.emailAddress;\r\n    const authPassword = context.authPassword;\r\n\r\n    \r\n    // Destructure and unpack properties from the state object.\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId\r\n    } = this.state;\r\n\r\n    // New user payload that will be passed to the createUser() method.\r\n    const courseBody = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId\r\n    };\r\n\r\n    // CreateUser() is an asynchronous operation that returns a promise.\r\n    context.data.createCourse(courseBody, authUser, authPassword)\r\n    .then(errors => {\r\n      console.log(errors)\r\n      if(errors.length) { //Handles sign up issues ex. empty array\r\n        this.setState({errors});\r\n      } else {\r\n        this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n      }\r\n    })\r\n    .catch (err => {\r\n      console.log(err); // Handle rejected promises\r\n      this.props.history.push('/error'); //Push to history stack.\r\n    })\r\n  }\r\n\r\n  cancel = () => {\r\n      this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignUp extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    estimatedTime: '',\r\n    materialsNeeded: '',\r\n    errors: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCourse();    \r\n  }\r\n\r\n  // Collect targetted course information to check if the user has authorization.\r\n  loadCourse = () => {\r\n    this.props.context.actions.courseInfo(this.props.match.params.id)\r\n    .then(response => {\r\n      // If the current user does not have authentication for the course redirect to /forbidden.\r\n        if(response.course.userId !== this.props.context.authenticatedUser.authUser.id) {\r\n          this.props.history.push('/forbidden')\r\n        } else {\r\n          this.setState({\r\n            title: response.course.title,\r\n            description: response.course.description,\r\n            estimatedTime: response.course.estimatedTime,\r\n            materialsNeeded: response.course.materialsNeeded,\r\n            userId: response.course.userId,\r\n            author: response.course.user\r\n          })\r\n        }\r\n\r\n      \r\n    })\r\n    .catch(error => {\r\n      console.log('Error fetching and parsing data', error)\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      errors,\r\n    } = this.state;\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"bounds course--detail\">\r\n            <h1 className=\"white-text\">Update Course</h1>\r\n            <Form \r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Update Course\"\r\n            elements={() => (\r\n            <div>\r\n            \r\n                <div className=\"grid-66\">\r\n                <div className=\"course--header\">\r\n                    <h4 className=\"course--label\">Course</h4>\r\n                    <div>\r\n                    <input\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        className=\"input-title course--title--input\"\r\n                        placeholder=\"Course title...\"\r\n                        onChange={this.change}\r\n                        value={title}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div className=\"course--description\">\r\n                    <div>\r\n                    <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        className=\"\"\r\n                        placeholder=\"Course description...\"\r\n                        onChange={this.change}\r\n                        value={description}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"grid-25 grid-right\">\r\n                <div className=\"course--stats\">\r\n                    <ul className=\"course--stats--list\">\r\n                    <li className=\"course--stats--list--item\">\r\n                        <h4>Estimated Time</h4>\r\n                        <div>\r\n                        <input\r\n                            id=\"estimatedTime\"\r\n                            name=\"estimatedTime\"\r\n                            type=\"text\"\r\n                            className=\"course--time--input\"\r\n                            placeholder=\"Hours\"\r\n                            onChange={this.change}\r\n                            value={estimatedTime}\r\n                        />\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"course--stats--list--item\">\r\n                        <h4>Materials Needed</h4>\r\n                        <div>\r\n                        <textarea\r\n                            id=\"materialsNeeded\"\r\n                            name=\"materialsNeeded\"\r\n                            className=\"\"\r\n                            placeholder=\"List materials...\"\r\n                            onChange={this.change}\r\n                            value={materialsNeeded}\r\n                        />\r\n                        </div>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )} />\r\n        </div> \r\n    );\r\n  }\r\n\r\n  // Allows change in the input values.\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  // On submit update course.\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const authUser = context.authenticatedUser.authUser.emailAddress;\r\n    const authPassword = context.authPassword;\r\n    const courseId = this.props.match.params.id;\r\n\r\n    // console.log(this.props)\r\n\r\n    \r\n    // Destructure and unpack properties from the state object.\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded\r\n    } = this.state;\r\n\r\n    // New user payload that will be passed to the createUser() method\r\n    const courseBody = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded\r\n    };\r\n\r\n    // console.log(courseBody)\r\n\r\n    // CreateUser() is an asynchronous operation that returns a promise.\r\n    context.data.updateCourse(courseId, courseBody, authUser, authPassword)\r\n    .then(errors => {\r\n      if(errors.length) { //handles sign up issues ex. empty array\r\n        this.setState({errors});\r\n      } else {\r\n        this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n      }\r\n    })\r\n    .catch (err => {\r\n      console.log(err); // handle rejected promises\r\n      this.props.history.push('/error'); //push to history stack\r\n    })\r\n  }\r\n\r\n  cancel = () => {\r\n      this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"actions--bar\">\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-100\">\r\n            <h1>Course has been deleted!</h1>\r\n            <Link className=\"button button-secondary\" to=\"/Full-Stack-App-with-React-and-a-REST-API\">Return to List</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignIn extends Component {\r\n  state = {\r\n    emailAddress: '',\r\n    password: '',\r\n    errors: [],\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      emailAddress,\r\n      password,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin white-text\">\r\n          <h1>Sign In</h1>\r\n          <Form \r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Sign In\"\r\n            elements={() => (\r\n              <React.Fragment>\r\n                <input \r\n                  id=\"emailAddress\" \r\n                  name=\"emailAddress\" \r\n                  type=\"text\"\r\n                  value={emailAddress} \r\n                  onChange={this.change} \r\n                  placeholder=\"Email\" />\r\n                <input \r\n                  id=\"password\" \r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={password} \r\n                  onChange={this.change} \r\n                  placeholder=\"Password\" />                \r\n              </React.Fragment>\r\n            )} />\r\n          <p>\r\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    // Destructuring assignment to extract context prop from this.props.\r\n    const { context } = this.props;\r\n    const { from } = this.props.location.state || {from: {pathname: '/Full-Stack-App-with-React-and-a-REST-API'}};\r\n    const { emailAddress, password } = this.state;\r\n\r\n    // Call signIn function to sign user in.\r\n    context.actions.signIn(emailAddress, password)\r\n      .then((user) => {\r\n        if(user === null) {\r\n          this.setState(() => {\r\n            return {errors: ['Sign-in was unsuccessful']};\r\n          });\r\n        } else {\r\n          this.props.history.push(from);\r\n          console.log(`SUCCESS! ${emailAddress} is now signed in!`)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.props.history.push('/error');\r\n      })\r\n  }\r\n\r\n  cancel = () => {\r\n    this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignUp extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    emailAddress: '',\r\n    password: '',\r\n    errors: [],\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin white-text\">\r\n          <h1>Sign Up</h1>\r\n          <Form \r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Sign Up\"\r\n            elements={() => (\r\n              <React.Fragment>\r\n                <input \r\n                  id=\"firstName\" \r\n                  name=\"firstName\" \r\n                  type=\"text\"\r\n                  value={firstName} \r\n                  onChange={this.change} \r\n                  placeholder=\"First Name\" />\r\n                  <input \r\n                  id=\"lastName\" \r\n                  name=\"lastName\" \r\n                  type=\"text\"\r\n                  value={lastName} \r\n                  onChange={this.change} \r\n                  placeholder=\"Last Name\" />\r\n                <input \r\n                  id=\"emailAddress\" \r\n                  name=\"emailAddress\" \r\n                  type=\"text\"\r\n                  value={emailAddress} \r\n                  onChange={this.change} \r\n                  placeholder=\"Email Address\" />\r\n                <input \r\n                  id=\"password\" \r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={password} \r\n                  onChange={this.change} \r\n                  placeholder=\"Password\" />\r\n              </React.Fragment>\r\n            )} />\r\n          <p>\r\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Allows change in the input values.\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    \r\n    // Destructure and unpack properties from the state object.\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n    } = this.state;\r\n\r\n    // New user payload that will be passed to the createUser() method.\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n    };\r\n\r\n    // CreateUser() is an asynchronous operation that returns a promise.\r\n    context.data.createUser(user)\r\n    .then(errors => {\r\n      if(errors.length) { // Handles sign up issues ex. empty array.\r\n        this.setState({errors});\r\n      } else {\r\n        console.log(`${emailAddress} is successfully signed up and authenticated!`);\r\n        context.actions.signIn(emailAddress, password)\r\n          .then(() => {\r\n            this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n          })\r\n      }\r\n    })\r\n    .catch (err => {\r\n      console.log(err); // Handle rejected promises.\r\n      this.props.history.push('/error'); \r\n    })\r\n  }\r\n\r\n  cancel = () => {\r\n      this.props.history.push('/Full-Stack-App-with-React-and-a-REST-API');\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => (\r\n  <div className=\"bounds white-text\">\r\n    <h1>Not Found</h1>\r\n    <p>Sorry! We couldn't find the page you're looking for.</p>\r\n    <Link className=\"button button-secondary\" to=\"/Full-Stack-App-with-React-and-a-REST-API\">Return to List</Link>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => (\r\n  <div className=\"bounds white-text\">\r\n    <h1>Forbidden</h1>\r\n    <p>Sorry! You do not have access to this page.</p>\r\n    <Link className=\"button button-secondary\" to=\"/Full-Stack-App-with-React-and-a-REST-API\">Return to List</Link>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => (\r\n  <div className=\"bounds white-text\">\r\n    <h1>Error</h1>\r\n    <p>Oops! An unexpected error has occured.</p>\r\n    <Link className=\"button button-secondary\" to=\"/Full-Stack-App-with-React-and-a-REST-API\">Return to List</Link>\r\n  </div>\r\n);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\n// destructures and renames the component prop in its parameters\r\n// collects any prop that gets passed to it in a ...rest variable\r\nexport default ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      { context => (\r\n        <Route\r\n          {...rest}\r\n          render={props => context.authenticatedUser ? (\r\n            <Component {...props} />\r\n            ) : (\r\n              <Redirect to={{\r\n                pathname: '/signin',\r\n                state: {from: props.location},\r\n              }} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\n// Import component information.\nimport CourseDetail from './components/CourseDetail';\nimport Courses from './components/Courses';\nimport CreateCourse from './components/CreateCourse';\nimport Header from './components/Header';\nimport UpdateCourse from './components/UpdateCourse';\nimport CourseDelete from './components/CourseDelete';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignOut from './components/UserSignOut';\nimport UserSignUp from './components/UserSignUp';\nimport NotFound from './components/NotFound';\nimport Forbidden from './components/Forbidden';\nimport UnhandledError from './components/UnhandledError';\n\n\n// Higher order components\nimport withContext from './Context';\nimport PrivateRoute from './PrivateRoute';\n\n// Connect Components to context\nconst HeaderWithContext = withContext(Header);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CoursesWithContext = withContext(Courses);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst CreateCourseWithContext = withContext(CreateCourse);\n\n\nexport default () => (\n  <Router>\n    <div>\n      <HeaderWithContext />\n\n      <Switch>\n        <Route exact path=\"/Full-Stack-App-with-React-and-a-REST-API\" component={CoursesWithContext} />\n        <PrivateRoute path=\"/courses/create\" component={CreateCourseWithContext} />\n        <Route path=\"/signin\" component={UserSignInWithContext} />\n        <Route path=\"/signup\" component={UserSignUpWithContext} />\n        <Route path=\"/signout\" component={UserSignOutWithContext} />\n        <Route exact path=\"/courses/:id\" component={CourseDetailWithContext}/>\n        <Route path=\"/course/delete\" component={CourseDelete} /> \n        <PrivateRoute path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n        <Route path=\"/not-found\" component={NotFound} />\n        <Route path=\"/forbidden\" component={Forbidden} />\n        <Route path=\"/error\" component={UnhandledError} />\n        <Redirect to=\"/not-found\" />\n      </Switch>\n    </div>\n  </Router>\n);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ context }) => {\r\n    \r\n        // Extract context from this.props.\r\n        const authUser = context.authenticatedUser;   \r\n\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"bounds\">\r\n                    <h1 className=\"header--logo\">Courses</h1>\r\n                    <nav>\r\n                        {\r\n                            authUser ? \r\n                                <React.Fragment>\r\n                                    <span>Welcome, {authUser.authUser.firstName} {authUser.authUser.lastName}!</span>\r\n                                    <Link to=\"/signout\">Sign Out</Link>\r\n                                </React.Fragment>\r\n                            :\r\n                                <React.Fragment>\r\n                                    <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\r\n                                    <Link className=\"signin\" to=\"/signin\">Sign In</Link>\r\n                                </React.Fragment>\r\n                        }\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n};","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default ({ context }) => {\r\n  // Call signout function.\r\n  useEffect(() => context.actions.signOut());\r\n\r\n  return (\r\n    <Redirect to=\"/Full-Stack-App-with-React-and-a-REST-API\" />\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global.css';\n\nimport { Provider } from './Context';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}